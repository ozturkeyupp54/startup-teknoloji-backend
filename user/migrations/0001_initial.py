# Generated by Django 4.2.9 on 2024-02-11 09:50

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=35, null=True)),
                ('last_name', models.CharField(blank=True, max_length=35, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='', null=True, upload_to='profile_pictures/')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('phone', models.CharField(default='8503070535', max_length=10, verbose_name='Phone')),
                ('linkedin_profiliniz', models.URLField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=254, null=True)),
                ('sirket_adi', models.CharField(blank=True, max_length=254, null=True, unique=True)),
                ('dogum_gununuz', models.DateField(blank=True, null=True)),
                ('egitim_seviyesi', models.CharField(blank=True, choices=[('İlkokul', 'İlkokul'), ('Ortaokul', 'Ortaokul'), ('Lise', 'Lise'), ('Lisans', 'Lisans'), ('Yüksek Lisans', 'Yüksek Lisans'), ('Doktora', 'Doktora')], max_length=15, null=True)),
                ('tckn', models.CharField(blank=True, default='00000000000', max_length=11, null=True)),
                ('kvkk', models.BooleanField(blank=True, default=False, null=True)),
                ('is_membership', models.BooleanField(blank=True, default=False, null=True)),
                ('is_electronic_commerce', models.BooleanField(blank=True, default=False, null=True)),
                ('is_staff', models.BooleanField(blank=True, default=False, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('login_attempt', models.IntegerField(blank=True, default=0, null=True)),
                ('is_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'ordering': ['-pk'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
